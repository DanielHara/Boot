import javax.swing.*;     // Para os Frames
import java.awt.*;        // Para a interface grafica
import java.awt.event.*;  // Para os eventos
import java.util.ArrayList;
import java.awt.Font;

public class Notepad extends JFrame implements ActionListener{
	
	private static JPanel Panel = new JPanel();
	
	private JTextField textField = new JTextField(30);
	private JTextArea textArea = new JTextArea(30,30);
	
	private JTextField textField2 = new JTextField(6);
	private JTextField textField3 = new JTextField(6);
	
	private JMenuBar MenuBar = new JMenuBar ();
	
	private JMenu fileMenu = new JMenu ("File");
	
	private JMenuItem item_Remover = new JMenuItem("Remover");
	
	private Lista_Anotacoes Lista = new Lista_Anotacoes ();
	
	private JButton Botao = new JButton ("Ordenar por Data");
	
//	private ArrayList<Anotacao> Lista = new ArrayList<Anotacao>();
	
	public Notepad ()
	{
		
		super();
		Panel.setSize(300, 300);
		textField.setFont(new Font(("Serif"), Font.BOLD, 16));
		textArea.setFont(new Font(("Serif"), Font.BOLD, 16));
		textField2.setFont(new Font(("Serif"), Font.BOLD, 16));
		textField3.setFont(new Font(("Serif"), Font.BOLD, 16));
		
		textArea.setEditable(false);
        
		Panel.add(textArea);
		
		Panel.add(textField);
		Panel.add(textField2);
		Panel.add(textField3);
		
		Panel.add(Botao);
		
		//this.add(MenuBar);
        this.setJMenuBar(MenuBar);
        
		MenuBar.add(fileMenu);
		
		fileMenu.add(item_Remover);
		
		
		textField.addActionListener(this);
		textField2.addActionListener(this);
		textField3.addActionListener(this);
		
		Botao.addActionListener(this);
		
		item_Remover.addActionListener(this);
		
	}
	
	public void actionPerformed (ActionEvent e)
	{
		Object source = e.getSource();
		int n;
		if (source == textField)
		{
			Anotacao Lido = new Anotacao ();
			String input = textField.getText();
			
			Lido.Escrever_Texto(input);
			Lido.Escrever_Data();
			Lista.add(Lido);
			
			textArea.append("Anotacao " + Lista.size() + ": \"" + Lista.get(Lista.size() - 1).getTexto() + "\", anotado em " + Lista.get(Lista.size() - 1).getData()+"\n");
			textField.selectAll();
		}
		
		else if (source == textField2)
		{
			n = Integer.parseInt(textField2.getText());
			Remover(n - 1);
		}
		else if (source == textField3)
		{
			Anotacao Edicao = new Anotacao();
			String input2 = textField3.getText();
			String numero;
			if (input2.indexOf(',') > 0)
			{
				numero = input2.substring(0, input2.indexOf(',') );
				
				
				System.out.println("NUMERO eh:" + numero + "indexOf(',') = " + input2.indexOf(',') );
				
				input2 = input2.substring(input2.indexOf(',') + 1);
				
				Edicao.Escrever_Texto(input2);
				Edicao.Escrever_Data();
						
				Editar(Integer.parseInt(numero) - 1, Edicao);
				
				Show_All();
				
			}
			else  System.out.println("ERRO: Entrada indevida!");
		}
		else if (source == Botao)
		{
			Data_Crescente ();
			
		}
	}
	
	
	private void Anotar_Posicao_n (int n, String input)
	{
		Anotacao Lido = new Anotacao ();
		Lido.Escrever_Texto(input);
		Lido.Escrever_Data();
		Lista.add(Lido);
	}
	
	private void Show_All ()
	{
		for (int i=0; i< Lista.size(); i++)
			textArea.append("Anotacao " + (i + 1)+ ": \"" + Lista.get(i).getTexto() + "\", anotado em " + Lista.get(i).getData() + "\n");
	}
	
	public void Remover (int n)                //Remove a (n+1)ésima anotação: 0 é a primeira anotação.
	{
		textArea.setText("");
		if (n < Lista.size())
		{
			Lista.remove(n);
			Show_All();	
		}
		else textArea.append("ERRO");
	}
	
	public void Editar (int n, Anotacao Anotacao_Substituta)    //Remove a (n+1)ésima anotação, substituindo-a por Anotacao_Substituta
	{
		textArea.setText("");
		if (n < Lista.size())
		{
			Lista.remove(n);
			Lista.add(n, Anotacao_Substituta);		
		}
		else textArea.append("ERRO");
	}
	
	public void Data_Crescente ()
	{
		Lista.Ordenar_Por_Data();
		textArea.setText("");
		Show_All();
	}
	
	
	
	
/*	public void Salvar (String Nome_Arquivo)
	{
		FileOutputStream = 
		
	}
	*/
/*
	private static void createAndShowGUI()
	{
		JFrame frame = new JFrame("TextDemo");
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		frame.add(new Notepad());

	//	frame.pack();
		frame.setVisible(true);
}    

	private static void GUI (Notepad bloco)
	{
		JFrame  frame = new JFrame ("CARTAS!");
		
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		frame.add(bloco);

	    frame.pack();
		frame.setVisible(true);
		
	}   

	public static void main(String[] args) {
 
		JFrame  frame = new JFrame ("CARTAS!");
		
        Notepad bloco = new Notepad();
        
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		frame.add(bloco);

	    frame.pack();
		frame.setVisible(true);
        
	}     */
	public static void main(String[] args) {
		
		Notepad bloco = new Notepad ();
		
		bloco.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		bloco.add(Panel);
		bloco.pack();
		bloco.setVisible(true);
		
		//  GUI (bloco);
	}
}
